# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish artifacts

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04
    env:
      COMMIT_MSG: ${{ github.event.head_commit.message }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get secrets from Vault
        id: vault
        uses: hashicorp/vault-action@v2.3.0
        with:
          url: ${{ secrets.VAULT_URL }}
          method: approle
          roleId: ${{ secrets.GTA_VAULT_ROLEID }}
          secretId: ${{ secrets.GTA_VAULT_SECRETID }}
          secrets: |
            jenkins/jfrog/service-accounts/coretech username ;
            jenkins/jfrog/service-accounts/coretech password

      - name: Set gradlew property
        run: |
          echo "ORG_GRADLE_PROJECT_artifactory_context_url=${{ secrets.ARTIFACTORY_URL }}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_artifactory_libs_repo_key=libs-release" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_artifactory_plugins_repo_key=plugins-release" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_artifactory_user=${{ steps.vault.outputs.username }}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_artifactory_password=${{ steps.vault.outputs.password }}" >> $GITHUB_ENV

      - name: Set version env
        run: echo "RELEASE_VERSION=$(echo $(./gradlew properties -q | grep "version:" | awk '{print $2}'))" >> $GITHUB_ENV

      - name: Build
        run: ./gradlew clean build -Partifactory

      - name: Publish
        run: ./gradlew artifactoryPublish -Partifactory

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          body: |
            Changes in this Release:
            ${{ env.COMMIT_MSG }}
          draft: false
          prerelease: false
